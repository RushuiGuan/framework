// <auto-generated />
using System;
using Albatross.EFCore.Test;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Albatross.EFCore.Test.Migrations.SqlServer
{
    [DbContext(typeof(MySqlServerMigration))]
    [Migration("20230329175843_MySqlServerMigration_v1")]
    partial class MySqlServerMigrationv1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("test")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Albatross.EFCore.Test.FutureMarket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ContractSize")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("FutureMarket", "test");

                    b
                        .HasAnnotation("SqlServer:IsTemporal", false)
                        .HasAnnotation("SqlServer:TemporalPeriodEndPropertyName", null)
                        .HasAnnotation("SqlServer:TemporalPeriodStartPropertyName", null);
                });

            modelBuilder.Entity("Albatross.EFCore.Test.JsonData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Rule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JsonData", "test");

                    b
                        .HasAnnotation("SqlServer:IsTemporal", false)
                        .HasAnnotation("SqlServer:TemporalPeriodEndPropertyName", null)
                        .HasAnnotation("SqlServer:TemporalPeriodStartPropertyName", null);
                });

            modelBuilder.Entity("Albatross.EFCore.Test.TickSize", b =>
                {
                    b.Property<int>("MarketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.HasKey("MarketId", "StartDate");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("MarketId", "StartDate"), false);

                    b.HasIndex("MarketId", "StartDate", "EndDate");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("MarketId", "StartDate", "EndDate"));

                    b.ToTable("TickSize", "test");

                    b
                        .HasAnnotation("SqlServer:IsTemporal", false)
                        .HasAnnotation("SqlServer:TemporalPeriodEndPropertyName", null)
                        .HasAnnotation("SqlServer:TemporalPeriodStartPropertyName", null);
                });

            modelBuilder.Entity("Albatross.EFCore.Test.TickSize", b =>
                {
                    b.HasOne("Albatross.EFCore.Test.FutureMarket", "Market")
                        .WithMany("TickSizes")
                        .HasForeignKey("MarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Market");
                });

            modelBuilder.Entity("Albatross.EFCore.Test.FutureMarket", b =>
                {
                    b.Navigation("TickSizes");
                });
#pragma warning restore 612, 618
        }
    }
}
